{"version":3,"sources":["../src/Converter.ts","../src/index.ts"],"sourcesContent":["import css, { StyleRules } from 'css'\n\nexport interface Options {\n  baseSize?: {\n    rem?: number;\n    vw?: number;\n  };\n  precision?: number;\n  forceRemProps?: string[];\n  keepRuleComment?: string;\n  keepFileComment?: string;\n  toRem?: boolean;\n  toVw?: boolean;\n}\n\nconst pxRegExp = /\\b(\\d+(\\.\\d+)?)px\\b/\nconst pxGlobalRegExp = new RegExp(pxRegExp.source, 'g')\nconst defaultConfig = {\n  baseSize: { rem: 75, vw: 7.5 },\n  precision: 6,\n  forceRemProps: ['font', 'font-size'],\n  keepRuleComment: 'no',\n  keepFileComment: 'pxtoremvw-disable',\n  toRem: true,\n  toVw: true,\n}\n\nexport default class PxConverter {\n  config: Options\n\n  constructor(options: Options = {}) {\n    this.config = Object.assign({}, defaultConfig, options)\n    // this.originConfig = deepMerge(this.config)\n  }\n\n  convert(cssText: string) {\n    const astObj = css.parse(cssText)\n    const firstRule = astObj.stylesheet!.rules[0]\n    if (!firstRule) return cssText\n    // 忽略整个文件\n    const isDisabled = firstRule.type === 'comment' &&\n      (firstRule as css.Comment)?.comment?.trim() === this.config.keepFileComment\n    if (isDisabled) return cssText\n\n    // const disableToVw = firstRule.type === 'comment' &&\n    //   firstRule.comment.trim() === this.config.disableToVwComment\n    // if (disableToVw) {\n    //   this.config.toVw = false\n    // } else {\n    //   this.config.toVw = this.originConfig.toVw\n    // }\n\n    // const disableToRem = firstRule.type === 'comment' &&\n    //   firstRule.comment.trim() === this.config.disableToRemComment\n    // if (disableToRem) {\n    //   this.config.toRem = false\n    // } else {\n    //   this.config.toRem = this.originConfig.toRem\n    // }\n\n    this.processRules(astObj?.stylesheet?.rules)\n    return css.stringify(astObj)\n  }\n\n  processRules(rules?: StyleRules['rules']) {\n    rules?.forEach(rule => {\n      if (rule.type === 'media') return this.processRules((rule as css.Media).rules)\n      if (rule.type === 'keyframes') return this.processRules((rule as css.KeyFrames).keyframes)\n      if (rule.type !== 'rule' && rule.type !== 'keyframe') return\n\n      const processDeclarations = (index: number): void => {\n        const dec = (rule as css.Rule)?.declarations?.[index]\n        if (!dec) return\n\n        // 必须为可转换的规则，否则去下一条\n        if (dec.type !== 'declaration' || !pxRegExp.test((dec as css.Declaration)?.value ?? '')) return processDeclarations(index + 1)\n\n        // 如果下一条规则为禁用注释，一起跳过\n        const nextDec = (rule as css.Rule)?.declarations?.[index + 1]\n        const isDisabled = nextDec &&\n          nextDec.type === 'comment' &&\n          (nextDec as css.Comment)?.comment?.trim() === this.config.keepRuleComment\n        if (isDisabled) {\n          return processDeclarations(index + 2)\n        }\n\n        const sourceValue = (dec as css.Declaration)?.value ?? ''\n        // 将原本的 px 替换为 rem\n        if (this.config.toRem) {\n          (dec as css.Declaration).value = this.getCalcValue('rem', sourceValue)\n        }\n        // 增加一条更高级的 vw 规则用于覆盖\n        if (this.config.toVw && this.config.forceRemProps?.indexOf((dec as css.Declaration)?.property ?? '') === -1) {\n          (rule as css.Rule)?.declarations?.splice(index + 1, 0, {\n            type: 'declaration',\n            property: (dec as css.Declaration).property,\n            value: this.getCalcValue('vw', sourceValue),\n          })\n          processDeclarations(index + 2)\n        } else {\n          processDeclarations(index + 1)\n        }\n      }\n\n      processDeclarations(0)\n    })\n  }\n\n  getCalcValue(targetUnit: 'rem' | 'vw', sourceValue: string) {\n    const baseSize = this.config.baseSize![targetUnit]!\n    if (!baseSize) return sourceValue\n\n    return sourceValue.replace(pxGlobalRegExp, ($0, $1) => {\n      return `${parseFloat(($1 / baseSize).toFixed(this.config.precision))}${targetUnit}`\n    })\n  }\n}\n","import type { PluginCreator, Plugin } from 'postcss'\nimport Converter, { Options } from './Converter'\n\nconst px2remvw: PluginCreator<Options> = (opts = {}) => {\n  const plugin: Plugin = {\n    postcssPlugin: 'postcss-px-to-remvw',\n    Once(root, helper) {\n      const converter = new Converter(opts)\n      const targetCssText = converter.convert(root.source?.input.css ?? '')\n\n      root.removeAll()\n      root.append(helper.postcss.parse(targetCssText))\n    },\n  }\n\n  return plugin\n}\npx2remvw.postcss = true\n\nexport default px2remvw\n"],"mappings":"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","names":[]}