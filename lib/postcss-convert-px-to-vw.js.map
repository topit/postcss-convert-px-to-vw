{"version":3,"file":"postcss-convert-px-to-vw.js","sources":["../src/Converter.js","../src/index.js"],"sourcesContent":["import css from 'css'\n\nconst pxRegExp = /\\b(\\d+(\\.\\d+)?)px\\b/\nconst pxGlobalRegExp = new RegExp(pxRegExp.source, 'g')\nconst defaultConfig = {\n  baseSize: { rem: 75, vw: 7.5 },\n  precision: 6,\n  forceRemProps: ['font', 'font-size'],\n  keepRuleComment: 'no',\n  keepFileComment: 'pxtoremvw-disable',\n  toRem: true,\n  // disableToRemComment: 'pxtoremvw-disable-rem',\n  toVw: true,\n  // disableToVwComment: 'pxtoremvw-disable-vw',\n}\n\nexport default class PxConverter {\n  constructor(options = {}) {\n    this.config = Object.assign({}, defaultConfig, options)\n    // this.originConfig = deepMerge(this.config)\n  }\n\n  convert(cssText) {\n    const astObj = css.parse(cssText)\n    const firstRule = astObj.stylesheet.rules[0]\n    if (!firstRule) return cssText\n    // 忽略整个文件\n    const isDisabled = firstRule.type === 'comment' &&\n      firstRule.comment.trim() === this.config.keepFileComment\n    if (isDisabled) return cssText\n\n    // const disableToVw = firstRule.type === 'comment' &&\n    //   firstRule.comment.trim() === this.config.disableToVwComment\n    // if (disableToVw) {\n    //   this.config.toVw = false\n    // } else {\n    //   this.config.toVw = this.originConfig.toVw\n    // }\n\n    // const disableToRem = firstRule.type === 'comment' &&\n    //   firstRule.comment.trim() === this.config.disableToRemComment\n    // if (disableToRem) {\n    //   this.config.toRem = false\n    // } else {\n    //   this.config.toRem = this.originConfig.toRem\n    // }\n\n    this.processRules(astObj.stylesheet.rules)\n    return css.stringify(astObj)\n  }\n\n  processRules(rules) {\n    rules.forEach(rule => {\n      if (rule.type === 'media') return this.processRules(rule.rules)\n      if (rule.type === 'keyframes') return this.processRules(rule.keyframes)\n      if (rule.type !== 'rule' && rule.type !== 'keyframe') return\n\n      const processDeclarations = index => {\n        const dec = rule.declarations[index]\n        if (!dec) return\n\n        // 必须为可转换的规则，否则去下一条\n        if (dec.type !== 'declaration' || !pxRegExp.test(dec.value)) return processDeclarations(index + 1)\n\n        // 如果下一条规则为禁用注释，一起跳过\n        const nextDec = rule.declarations[index + 1]\n        const isDisabled = nextDec &&\n          nextDec.type === 'comment' &&\n          nextDec.comment.trim() === this.config.keepRuleComment\n        if (isDisabled) {\n          return processDeclarations(index + 2)\n        }\n\n        const sourceValue = dec.value\n        // 将原本的 px 替换为 rem\n        if (this.config.toRem) {\n          dec.value = this.getCalcValue('rem', sourceValue)\n        }\n        // 增加一条更高级的 vw 规则用于覆盖\n        if (this.config.toVw && this.config.forceRemProps.indexOf(dec.property) === -1) {\n          rule.declarations.splice(index + 1, 0, {\n            type: 'declaration',\n            property: dec.property,\n            value: this.getCalcValue('vw', sourceValue),\n          })\n          processDeclarations(index + 2)\n        } else {\n          processDeclarations(index + 1)\n        }\n      }\n\n      processDeclarations(0)\n    })\n  }\n\n  getCalcValue(targetUnit, sourceValue) {\n    const baseSize = this.config.baseSize[targetUnit]\n    if (!baseSize) return sourceValue\n\n    return sourceValue.replace(pxGlobalRegExp, ($0, $1) => {\n      return `${parseFloat(($1 / baseSize).toFixed(this.config.precision))}${targetUnit}`\n    })\n  }\n}\n","import postcss from 'postcss'\nimport Converter from './Converter'\n\nconst plugin = postcss.plugin('postcss-px-to-remvw', options => {\n  return (css, result) => {\n    if (options.exclude) {\n      if (Object.prototype.toString.call(options.exclude) !== '[object RegExp]') {\n        throw new Error('options.exclude should be RegExp!')\n      }\n      if (css.source.input.file.match(options.exclude) !== null) {\n        result.root = css\n        return\n      }\n    }\n    const converter = new Converter(options)\n    const targetCssText = converter.convert(css.toString())\n    result.root = postcss.parse(targetCssText)\n  }\n})\n\nexport default plugin\n"],"names":["pxRegExp","pxGlobalRegExp","RegExp","source","defaultConfig","baseSize","rem","vw","precision","forceRemProps","keepRuleComment","keepFileComment","toRem","toVw","PxConverter","options","config","Object","assign","cssText","astObj","css","parse","firstRule","stylesheet","rules","type","comment","trim","this","processRules","stringify","forEach","rule","_this","keyframes","processDeclarations","index","dec","declarations","test","value","nextDec","sourceValue","getCalcValue","indexOf","property","splice","targetUnit","replace","$0","$1","parseFloat","toFixed","_this2","plugin","postcss","result","exclude","prototype","toString","call","Error","input","file","match","root","targetCssText","Converter","convert"],"mappings":"2jBAEA,IAAMA,SAAW,sBACXC,eAAiB,IAAIC,OAAOF,SAASG,OAAQ,KAC7CC,cAAgB,CACpBC,SAAU,CAAEC,IAAK,GAAIC,GAAI,KACzBC,UAAW,EACXC,cAAe,CAAC,OAAQ,aACxBC,gBAAiB,KACjBC,gBAAiB,oBACjBC,OAAO,EAEPC,MAAM,GAIaC,wCACPC,yDAAU,gCACfC,OAASC,OAAOC,OAAO,GAAId,cAAeW,wDAIzCI,OACAC,EAASC,IAAIC,MAAMH,GACnBI,EAAYH,EAAOI,WAAWC,MAAM,UACrCF,EAEiC,YAAnBA,EAAUG,MAC3BH,EAAUI,QAAQC,SAAWC,KAAKb,OAAOL,gBACpBQ,QAkBlBW,aAAaV,EAAOI,WAAWC,OAC7BJ,IAAIU,UAAUX,IAvBED,uCA0BZM,cACXA,EAAMO,SAAQ,SAAAC,MACM,UAAdA,EAAKP,KAAkB,OAAOQ,EAAKJ,aAAaG,EAAKR,UACvC,cAAdQ,EAAKP,KAAsB,OAAOQ,EAAKJ,aAAaG,EAAKE,cAC3C,SAAdF,EAAKP,MAAiC,aAAdO,EAAKP,OAEL,SAAtBU,EAAsBC,OACpBC,EAAML,EAAKM,aAAaF,MACzBC,MAGY,gBAAbA,EAAIZ,OAA2B1B,SAASwC,KAAKF,EAAIG,OAAQ,OAAOL,EAAoBC,EAAQ,OAG1FK,EAAUT,EAAKM,aAAaF,EAAQ,MACvBK,GACA,YAAjBA,EAAQhB,MACRgB,EAAQf,QAAQC,SAAWM,EAAKlB,OAAON,uBAEhC0B,EAAoBC,EAAQ,OAG/BM,EAAcL,EAAIG,MAEpBP,EAAKlB,OAAOJ,QACd0B,EAAIG,MAAQP,EAAKU,aAAa,MAAOD,IAGnCT,EAAKlB,OAAOH,OAA6D,IAArDqB,EAAKlB,OAAOP,cAAcoC,QAAQP,EAAIQ,WAC5Db,EAAKM,aAAaQ,OAAOV,EAAQ,EAAG,EAAG,CACrCX,KAAM,cACNoB,SAAUR,EAAIQ,SACdL,MAAOP,EAAKU,aAAa,KAAMD,KAEjCP,EAAoBC,EAAQ,IAE5BD,EAAoBC,EAAQ,IAIhCD,CAAoB,4CAIXY,EAAYL,cACjBtC,EAAWwB,KAAKb,OAAOX,SAAS2C,UACjC3C,EAEEsC,EAAYM,QAAQhD,gBAAgB,SAACiD,EAAIC,mBACpCC,YAAYD,EAAK9C,GAAUgD,QAAQC,EAAKtC,OAAOR,oBAAcwC,MAHnDL,WC9FpBY,OAASC,QAAQD,OAAO,uBAAuB,SAAAxC,UAC5C,SAACM,EAAKoC,MACP1C,EAAQ2C,QAAS,IACqC,oBAApDzC,OAAO0C,UAAUC,SAASC,KAAK9C,EAAQ2C,eACnC,IAAII,MAAM,wCAEmC,OAAjDzC,EAAIlB,OAAO4D,MAAMC,KAAKC,MAAMlD,EAAQ2C,qBACtCD,EAAOS,KAAO7C,OAKZ8C,EADY,IAAIC,YAAUrD,GACAsD,QAAQhD,EAAIuC,YAC5CH,EAAOS,KAAOV,QAAQlC,MAAM6C"}